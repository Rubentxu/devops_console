{
  "tenants": [
    {
      "name": "Tenant 1",
      "description": "First tenant"
    },
    {
      "name": "Tenant 2",
      "description": "Second tenant"
    }
  ],
  "workspaces": [
    {
      "name": "Workspace 1",
      "description": "First workspace",
      "tenant_id": 1
    },
    {
      "name": "Workspace 2",
      "description": "Second workspace",
      "tenant_id": 1
    },
    {
      "name": "Workspace 3",
      "description": "Third workspace",
      "tenant_id": 2
    }
  ],
  "tasks": [
    {
      "workspace_id": "1",
      "name": "Deploy Application to OpenShift",
      "task_type": "deployment",
      "technology": "OpenShift",
 "worker_type": "OpenShift",
      "description": "Deploy the application to OpenShift cluster",
      "extended_info": "Use the latest container image for deployment",
      "tags": ["deployment", "openshift"],
      "forms": [
        {
          "id": "form1",
          "name": "OpenShift Deployment Form",
          "fields": {
            "project": "my-app",
            "replicas": "3",
            "image": "quay.io/myorg/myapp:latest",
            "cpu_limit": "500m",
            "memory_limit": "512Mi",
            "healthcheck_path": "/health",
            "route_hostname": "myapp.apps.example.com"
          }
        }
      ],
      "approvals": [
        {
          "id": "approval1",
          "user_id": "user1",
          "approved": true,
          "approval_date": "2023-05-01T10:00:00Z"
        }
      ],
      "metadata": {
        "priority": "high",
        "estimated_duration": "30m"
      },
      "tasks_executed": []
    },
    {
      "workspace_id": "2",
      "name": "Configure OpenShift CI/CD Pipeline",
      "task_type": "ci",
      "technology": "OpenShift Pipelines",
 "worker_type": "OpenShift",
      "description": "Set up a Continuous Integration/Continuous Deployment pipeline in OpenShift",
      "extended_info": "Configure Tekton pipeline for automated builds and deployments",
      "tags": ["ci", "cd", "openshift", "tekton"],
      "forms": [
        {
          "id": "form2",
          "name": "OpenShift Pipeline Configuration",
          "fields": {
            "git_repo": "https://github.com/example/repo.git",
            "git_revision": "main",
            "image_repo": "image-registry.openshift-image-registry.svc:5000/my-app/myapp",
            "deployment_name": "myapp",
            "deployment_namespace": "my-app"
          }
        }
      ],
      "approvals": [],
      "metadata": {
        "priority": "medium",
        "estimated_duration": "45m"
      },
      "tasks_executed": []
    },
    {
      "workspace_id": "1",
      "name": "Deploy Application",
      "task_type": "deployment",
      "technology": "Kubernetes",
 "worker_type": "Kubernetes",
      "description": "Deploy the application to Kubernetes cluster",
      "extended_info": "Use the latest Docker image for deployment",
      "tags": ["deployment", "kubernetes"],
      "forms": [
        {
          "id": "form1",
          "name": "Deployment Form",
          "fields": {
            "namespace": "production",
            "replicas": "3",
            "image_tag": "latest",
            "cpu_limit": "500m",
            "memory_limit": "512Mi",
            "healthcheck_path": "/health",
            "ingress_enabled": "true",
            "ingress_host": "app.example.com"
          }
        }
      ],
      "approvals": [
        {
          "id": "approval1",
          "user_id": "user1",
          "approved": true,
          "approval_date": "2023-05-01T10:00:00Z"
        }
      ],
      "metadata": {
        "priority": "high",
        "estimated_duration": "30m"
      },
      "tasks_executed": [
        {
          "id": "exec1",
          "run_at": "2023-05-01T11:00:00Z",
          "workspace_id": "1",
          "done": true,
          "status": "Completed"
        }
      ]
    },
    {
      "workspace_id": "2",
      "name": "Configure CI Pipeline",
      "task_type": "ci",
      "technology": "Jenkins",
 "worker_type": "Kubernetes",
      "description": "Set up a Continuous Integration pipeline",
      "extended_info": "Configure Jenkins job for automated builds and tests",
      "tags": ["ci", "jenkins", "automation"],
      "forms": [
        {
          "id": "form2",
          "name": "CI Pipeline Configuration",
          "fields": {
            "repository_url": "https://github.com/example/repo.git",
            "branch": "main",
            "build_command": "mvn clean install",
            "test_command": "mvn test",
            "artifact_path": "target/*.jar",
            "notification_email": "team@example.com"
          }
        }
      ],
      "approvals": [],
      "metadata": {
        "priority": "medium",
        "estimated_duration": "45m"
      },
      "tasks_executed": []
    },
    {
      "workspace_id": "3",
      "name": "Provision Cloud Infrastructure",
      "task_type": "infrastructure",
      "technology": "Terraform",
 "worker_type": "Openshift",
      "description": "Provision cloud resources using Terraform",
      "extended_info": "Create VPC, subnets, and EC2 instances on AWS",
      "tags": ["infrastructure", "terraform", "aws"],
      "forms": [
        {
          "id": "form3",
          "name": "Cloud Infrastructure Provisioning",
          "fields": {
            "region": "us-west-2",
            "vpc_cidr": "10.0.0.0/16",
            "public_subnet_cidr": "10.0.1.0/24",
            "private_subnet_cidr": "10.0.2.0/24",
            "instance_type": "t2.micro",
            "key_pair_name": "my-key-pair",
            "min_size": "2",
            "max_size": "5"
          }
        }
      ],
      "approvals": [
        {
          "id": "approval2",
          "user_id": "user2",
          "approved": false,
          "approval_date": null
        }
      ],
      "metadata": {
        "priority": "high",
        "estimated_duration": "60m"
      },
      "tasks_executed": []
    },
    {
      "workspace_id": "2",
      "name": "Run Tests",
      "task_type": "testing",
      "technology": "Jest",
 "worker_type": "Kubernetes",
      "description": "Run automated tests for the application",
      "tags": ["testing", "automation"],
      "forms": [],
      "approvals": [],
      "metadata": {
        "priority": "medium",
        "estimated_duration": "15m"
      },
      "tasks_executed": []
    },
    {
      "workspace_id": "3",
      "name": "Build Docker Image",
      "task_type": "build",
      "technology": "Docker",
 "worker_type": "Docker",
      "description": "Build a Docker image for the application",
      "extended_info": "Use multi-stage build for optimized image size",
      "tags": ["build", "docker", "ci"],
      "forms": [
        {
          "id": "form2",
          "name": "Docker Build Form",
          "fields": {
            "image_name": "myapp",
            "image_tag": "latest"
          }
        }
      ],
      "approvals": [],
      "metadata": {
        "priority": "high",
        "estimated_duration": "10m"
      },
      "tasks_executed": []
    },
    {
      "workspace_id": "1",
      "name": "Configure Monitoring",
      "task_type": "monitoring",
      "technology": "Prometheus",
 "worker_type": "Kubernetes",
      "description": "Set up Prometheus monitoring for the application",
      "extended_info": "Configure alerting rules and Grafana dashboards",
      "tags": ["monitoring", "prometheus", "grafana"],
      "forms": [],
      "approvals": [],
      "metadata": {
        "priority": "medium",
        "estimated_duration": "45m"
      },
      "tasks_executed": []
    },
    {
      "workspace_id": "2",
      "name": "Database Migration",
      "task_type": "database",
      "technology": "Flyway",
 "worker_type": "Kubernetes",
      "description": "Run database migration scripts",
      "extended_info": "Apply schema changes and data updates",
      "tags": ["database", "migration", "flyway"],
      "forms": [
        {
          "id": "form3",
          "name": "Migration Form",
          "fields": {
            "target_version": "v2.5",
            "rollback_on_failure": "true"
          }
        }
      ],
      "approvals": [
        {
          "id": "approval2",
          "user_id": "user2",
          "approved": false,
          "approval_date": null
        }
      ],
      "metadata": {
        "priority": "high",
        "estimated_duration": "20m"
      },
      "tasks_executed": []
    }
  ],
  "workers": [
    {
      "name": "Kubernetes Worker",
      "type": "Kubernetes",
      "config": {
        "namespace": "default",
        "job_template": {
          "apiVersion": "batch/v1",
          "kind": "Job",
          "metadata": {
            "generateName": "task-"
          },
          "spec": {
            "template": {
              "spec": {
                "containers": [
                  {
                    "name": "task",
                    "image": "busybox",
                    "command": ["echo", "Hello from Kubernetes!"]
                  }
                ],
                "restartPolicy": "Never"
              }
            }
          }
        }
      }
    },
    {
      "name": "Docker Worker",
      "type": "Docker",
      "config": {
        "image": "busybox",
        "command": "echo 'Hello from Docker!'",
        "environment": {
          "ENV_VAR": "value"
        },
        "volumes": {
          "/host/path": {
            "bind": "/container/path",
            "mode": "ro"
          }
        }
      }
    },
    {
      "name": "Podman Worker",
      "type": "Podman",
      "config": {
        "image": "busybox",
        "command": "echo 'Hello from Podman!'",
        "environment": {
          "ENV_VAR": "value"
        },
        "mounts": {
          "/host/path": {
            "target": "/container/path",
            "type": "bind",
            "read_only": true
          }
        }
      }
    },
    {
      "name": "OpenShift Worker",
      "type": "openshift",
      "config": {
        "project": "default",
        "job_template": {
          "apiVersion": "batch/v1",
          "kind": "Job",
          "metadata": {
            "generateName": "openshift-task-"
          },
          "spec": {
            "template": {
              "spec": {
                "containers": [
                  {
                    "name": "task",
                    "image": "quay.io/openshift/origin-cli:latest",
                    "command": ["echo", "Hello from OpenShift!"]
                  }
                ],
                "restartPolicy": "Never"
              }
            }
          }
        }
      }
    }
  ]
}
