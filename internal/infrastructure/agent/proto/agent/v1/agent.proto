// proto/agent/v1/agent.proto
syntax = "proto3";

package agent.v1;
option go_package = "devops_console/internal/infrastructure/agent/proto/agent/v1";

service AgentService {
  rpc Connect(ConnectRequest) returns (stream Command) {}
  rpc SendEvent(ExecutionEvent) returns (EventAck) {}
  rpc SendMetrics(MetricsUpdate) returns (MetricsAck) {}
}

message ConnectRequest {
  string agent_id = 1;
  string agent_version = 2;
  SystemInfo system_info = 3;
}

message SystemInfo {
  string hostname = 1;
  string os = 2;
  string arch = 3;
  map<string, string> labels = 4;
}

message Command {
  string command_id = 1;
  string command = 2;
  repeated string args = 3;
  map<string, string> environment = 4;
  string working_dir = 5;
}

message ExecutionEvent {
  string command_id = 1;
  EventType type = 2;
  string payload = 3;
  int64 timestamp = 4;
}

enum EventType {
  UNKNOWN = 0;
  STARTED = 1;
  OUTPUT = 2;
  ERROR = 3;
  COMPLETED = 4;
  FAILED = 5;
  INTERRUPTED = 6;
  CANCELED = 7;
  TIMEOUT = 8;
  KILLED = 9;
  EXITED = 10;
  METRICS = 11;
}

message EventAck {}
message MetricsAck {}

message MetricsUpdate {
  string agent_id = 1;
  int64 timestamp = 2;
  SystemMetrics system = 3;
}

message SystemMetrics {
  double cpu_usage = 1;
  double memory_usage = 2;
  int64 disk_usage = 3;
}